<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>操作系统名词解释</title>
      <link href="2021/04/08/2021-04-08-cao-zuo-xi-tong-ming-ci-jie-shi/"/>
      <url>2021/04/08/2021-04-08-cao-zuo-xi-tong-ming-ci-jie-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-操作系统引论"><a href="#第一章-操作系统引论" class="headerlink" title="第一章 操作系统引论"></a>第一章 操作系统引论</h1><p><strong>操作系统：</strong>是一组能有效地组织和管理计算机硬件和软件资源，合理地对各类作业进行调度，以及方便用户使用的程序的集合。p8<br><strong>分时系统：</strong>是指在一台主机上连接了多个配有显示器和键盘的终端并由此组成的系统，该系统允许多个用户同时通过自己的终端，以交互方式使用计算机，共享主机中的资源。p8<br><strong>实时系统：</strong>是指系统能及时响应外部事件的请求，在规定的时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。p10</p><h1 id="第二章-进程的描述与控制"><a href="#第二章-进程的描述与控制" class="headerlink" title="第二章 进程的描述与控制"></a>第二章 进程的描述与控制</h1><p><strong>进程的定义：</strong>进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。p36<br><strong>原语的概念：</strong>原语是由若干条指令组成的，用于完成一定功能的一个过程。p43<br><strong>临界资源：</strong>一段时间内只允许一个进程访问的资源，如打印机，扫描仪等。p48<br><strong>临界区：</strong>每个进程中访问临界资源的那段代码。p50<br><strong>管程的定义：</strong>一个管程定义了一个数据结构和能为并发进程所执行(在该数据结构上)的一组操作，这组操作能同步进程和改变管程中的数据。p58<br><strong>管道：</strong>是指用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，又名pipe文件。p68</p><h1 id="第三章-处理机调度与死锁"><a href="#第三章-处理机调度与死锁" class="headerlink" title="第三章 处理机调度与死锁"></a>第三章 处理机调度与死锁</h1><p><strong>周转时间：</strong>指从作业被提交给系统开始，到作业完成为止的这段时间间隔。p86<br><strong>响应时间：</strong>是从用户通过键盘提交一个请求开始，直到屏幕上显示出处理结果为止的一段时间间隔。p87<br><strong>死锁：</strong>如果一组进程中的每一个进程都在等待仅由该组进程中的其他进程才能引发的事件，那么该组进程是死锁的。p107<br><strong>安全状态：</strong>指系统能按某种进程顺序(P1，P2，…，Pn)为每个进程Pi分配其所需资源，直至满足每个进程对资源的最大需求，使每个进程都可顺利地完成。p110</p><h1 id="第四章-存储器管理"><a href="#第四章-存储器管理" class="headerlink" title="第四章 存储器管理"></a>第四章 存储器管理</h1><p><strong>拼接（紧凑）：</strong>通过移动内存中作业的位置，以把原来多个分散的小分区拼接成一个大分区的方法。p134<br><strong>对换：</strong>指把内存中暂时不能运行的进程或者暂时不用的程序和数据调出到外存上，以便腾出足够的内存空间，再把已具备运行条件的进程或进程所需要的程序和数据调入内存。p135<br><strong>页面（页）：</strong>将用户程序的地址空间分成若干个固定大小的区域。p138<br><strong>快表（联想寄存器）：</strong>为了提高地址变换速度，可在地址变换机构中增设一个具有并行查寻能力的特殊高速缓冲寄存器，又称为“联想寄存器”，或称为“快表”。p141</p><h1 id="第五章-虚拟存储器"><a href="#第五章-虚拟存储器" class="headerlink" title="第五章 虚拟存储器"></a>第五章 虚拟存储器</h1><p><strong>虚拟存储器：</strong>指具有请求调入功能和置换功能，能从逻辑上对内存容量加以扩充的一种存储器系统。p155<br><strong>最小物理块数：</strong>指能保证进程正常运行所需的最小物理块数，当系统为进程分配的物理块数少于此值时，进程将无法运行。p159</p><h1 id="第六章-输入输出系统"><a href="#第六章-输入输出系统" class="headerlink" title="第六章 输入输出系统"></a>第六章 输入输出系统</h1><p><strong>设备无关性：</strong>应用程序所用的设备，不局限于使用某个具体的物理设备。P198<br><strong>设备安全分配方式：</strong>每当进程发出I/O请求后，便进入阻塞状态，直到其I/O操作完成时才被唤醒。在采用该策略时，一旦进程已经获得某种设备后便阻塞，不能再请求任何资源，而在它阻塞时又不保持任何资源。p202<br><strong>设备不安全分配方式：</strong>在这种分配方式中，进程在发出I/O请求后仍继续运行，需要时又发出第二个I/O请求、 第三个I/O请求等。仅当进程所请求的设备已被另一进程占用时，才进入阻塞状态。p202<br><strong>SPOOLing技术（假脱机技术）：</strong>事实上，当系统中引入了多道程序技术后，完全可以利用其中的一道程序，来模拟脱机输入时的外围控制机功能，把低速I/O设备上的数据传送到高速磁盘上；再用另一道程序来模拟脱机输出时外围控制机的功能，把数据从磁盘传送到低速输出设备上。这样，便可在主机的直接控制下，实现以前的脱机输入、输出功能。此时外围操作可以与CPU对数据的处理同时进行，我们把这种在联机情况下实现的同时外围操作称作SPOOLING技术，或称为假脱机操作。 p205</p><h1 id="第七章-文件管理"><a href="#第七章-文件管理" class="headerlink" title="第七章 文件管理"></a>第七章 文件管理</h1><p><strong>记录：</strong>一组相关数据项的集合，用于描述一个对象在某方面的属性。p221<br><strong>文件：</strong>指由创建者所定义的、具有文件名的一组相关元素的集合，可分为有结构文件和无结构文件两种。p222<br><strong>索引结点（i结点）:</strong> 在有的系统中，如UNIX系统，便采用了把文件名与文件描述信息分开的办法，亦即，使文件描述信息单独形成一个称为索引结点的数据结构，简称为i结点。p234</p><h1 id="第八章-磁盘存储器的管理"><a href="#第八章-磁盘存储器的管理" class="headerlink" title="第八章 磁盘存储器的管理"></a>第八章 磁盘存储器的管理</h1><p><strong>位示图：</strong>利用二进制的一位来表示磁盘中一个盘块的使用情况，当其值为“0”时，表示对应的盘块空闲，为“1”时，表示已分配.p261<br><strong>磁盘高速缓存：</strong>指在内存中为磁盘盘块设置的一个缓冲区，在缓冲区中保存了某些盘块的副本。p263<br><strong>事务</strong>：用于访问和修改各种数据项的一个程序单位.。事务也可以被看做是一系列相关的读和写操作。p272</p>]]></content>
      
      
      <categories>
          
          <category> 复试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> 重点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>协同过滤算法</title>
      <link href="2021/04/04/xie-tong-guo-lu-suan-fa/"/>
      <url>2021/04/04/xie-tong-guo-lu-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="ItemCF"><a href="#ItemCF" class="headerlink" title="ItemCF"></a>ItemCF</h1><p>个性化推荐（基于物品的协同过滤算法）</p><h2 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h2><blockquote><ol><li>计算物品之间的相似度</li><li>根据物品的相似度和用户的历史行为给用户生成推荐列表</li></ol></blockquote><h2 id="二、算法实现和应用"><a href="#二、算法实现和应用" class="headerlink" title="二、算法实现和应用"></a>二、算法实现和应用</h2><h3 id="1、计算物品之间的相似度-余弦相似度"><a href="#1、计算物品之间的相似度-余弦相似度" class="headerlink" title="1、计算物品之间的相似度[余弦相似度]"></a>1、计算物品之间的相似度[余弦相似度]</h3><p>设 N(u) 表示喜欢物品u的用户数，| N(u) ⋂ N(u) |表示同时喜欢物品u物品v的用户数，那么物品 u 和 v 的相似度为</p><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/CodeCogsEqn.png" text-align="center"></div><p>以Demo为例，为用户1001推荐商品。</p><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/table.png" text-align="center" height="300px"></div><h4 id="1-1、建立用户-物品倒排表"><a href="#1-1、建立用户-物品倒排表" class="headerlink" title="1.1、建立用户-物品倒排表"></a>1.1、建立用户-物品倒排表</h4><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/user-item.png" text-align="center" height="100px"></div><h4 id="1-2、计算共现矩阵，N-i-表示除去当前用户喜欢物品i的人数"><a href="#1-2、计算共现矩阵，N-i-表示除去当前用户喜欢物品i的人数" class="headerlink" title="1.2、计算共现矩阵，N[i]表示除去当前用户喜欢物品i的人数"></a>1.2、计算共现矩阵，N[i]表示除去当前用户喜欢物品i的人数</h4><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/gongxianjuzhen.png" text-align="center" height="200px"></div><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/usercount.png" text-align="center" height="50px"></div><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//初始矩阵</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> likeLists<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> pid1 <span class="token operator">=</span> likeLists<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">++</span><span class="token class-name">N</span><span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">;</span>                                          <span class="token comment">//喜欢该id物品的人数加一</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> likeLists<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> pid2 <span class="token operator">=</span> likeLists<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">++</span>curMatrix<span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">[</span>pid2<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">++</span>curMatrix<span class="token punctuation">[</span>pid2<span class="token punctuation">]</span><span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token comment">//对称加一</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//累加所有矩阵, 得到共现矩阵</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> products<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> products<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> pid1 <span class="token operator">=</span> products<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pid2 <span class="token operator">=</span> products<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        comMatrix<span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">[</span>pid2<span class="token punctuation">]</span> <span class="token operator">+=</span> curMatrix<span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">[</span>pid2<span class="token punctuation">]</span><span class="token punctuation">;</span>        comMatrix<span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">[</span>pid2<span class="token punctuation">]</span> <span class="token operator">+=</span> curMatrix<span class="token punctuation">[</span>pid1<span class="token punctuation">]</span><span class="token punctuation">[</span>pid2<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3、计算余弦相似度矩阵W"><a href="#1-3、计算余弦相似度矩阵W" class="headerlink" title="1.3、计算余弦相似度矩阵W"></a>1.3、计算余弦相似度矩阵W</h4><p>当前用户1001点赞的物品ID为1，由共现矩阵可得Nij。（跳过当前用户1001喜欢得物品1）</p><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/Nij.png" text-align="center" height="50px"></div><p>根据余弦相似度公式，得Wij。</p><div align="center"><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/Wij.png" text-align="center" height="50px"></div><p>这里使用了TreeSet重写compare方法实现添加的商品按点赞数排序。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> preList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//重写compare方法  按相似度Wij排序；当相似度Wij相同时，按点赞数排序</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Product</span> o1<span class="token punctuation">,</span> <span class="token class-name">Product</span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span>o2<span class="token punctuation">.</span><span class="token function">getW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>o2<span class="token punctuation">.</span><span class="token function">getW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回值为0，表示同一元素</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment">//当相似度相同时，比较点赞数</span>            <span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">getCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>o2<span class="token punctuation">.</span><span class="token function">getCnt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//预处理的列表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Like</span> like<span class="token operator">:</span> likeLists<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> <span class="token class-name">Nij</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                         <span class="token comment">//既喜欢i又喜欢j的人数</span>    <span class="token keyword">double</span> <span class="token class-name">Wij</span><span class="token punctuation">;</span>                          <span class="token comment">//相似度</span>    <span class="token class-name">Product</span> tmp<span class="token punctuation">;</span>                           <span class="token comment">//当前的产品</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> like<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Product</span> product<span class="token operator">:</span> products<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>like<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> product<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> product<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Nij</span> <span class="token operator">=</span> comMatrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token class-name">Wij</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token class-name">Nij</span><span class="token operator">/</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token class-name">N</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span><span class="token class-name">N</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//计算余弦相似度</span>        tmp <span class="token operator">=</span> productdao<span class="token punctuation">.</span><span class="token function">findProductById</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token class-name">Wij</span><span class="token punctuation">)</span><span class="token punctuation">)</span> tmp<span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> tmp<span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token class-name">Wij</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>used<span class="token punctuation">[</span>tmp<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>               <span class="token comment">//已加入推荐列表</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token class-name">Wij</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">Wij</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            preList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>            used<span class="token punctuation">[</span>tmp<span class="token punctuation">.</span><span class="token function">getPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2、根据物品的相似度和用户的历史行为给用户生成推荐列表"><a href="#2、根据物品的相似度和用户的历史行为给用户生成推荐列表" class="headerlink" title="2、根据物品的相似度和用户的历史行为给用户生成推荐列表"></a>2、根据物品的相似度和用户的历史行为给用户生成推荐列表</h3><p>此时推荐的物品列表为4，3，5。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> recomLists <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//生成的推荐结果</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> preList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    recomLists<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>preList<span class="token punctuation">.</span><span class="token function">pollLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3、推荐列表不足5个的按点赞数补充。"><a href="#3、推荐列表不足5个的按点赞数补充。" class="headerlink" title="3、推荐列表不足5个的按点赞数补充。"></a>3、推荐列表不足5个的按点赞数补充。</h3><p>此时推荐的物品列表为4，3，5，2，0。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//推荐数量不满5个, 补足喜欢数最高的文章，考虑重复</span><span class="token keyword">if</span><span class="token punctuation">(</span>recomLists<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    recomLists <span class="token operator">=</span> productdao<span class="token punctuation">.</span><span class="token function">findTopNProducts</span><span class="token punctuation">(</span>recomLists<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、测试样例"><a href="#三、测试样例" class="headerlink" title="三、测试样例"></a>三、测试样例</h2><p>在当前状态下，用户1001对物品6点赞，刷新后推荐列表更新为0，4，3，5，2。<br>简单过程（具体之后补）<br><img src="https://github.com/xuzichang/UserCF/blob/master/ImgForReadme/userCF.jpg" width="750"></p>]]></content>
      
      
      <categories>
          
          <category> 原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 个性化推荐 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
